(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-0abde34c"],{"3d37":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"publicUserCompanyList"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"publicUserCompanyList"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"company"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"vertical"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"companyVerticalId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"companyId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"verticalId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isHidden"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isUserCompany"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:230}};i.loc.source={body:"query publicUserCompanyList($id:Int!) {\n   publicUserCompanyList(id:$id) {\n        company\n        vertical\n        companyVerticalId\n        type\n        companyId\n        verticalId\n        isHidden\n        isUserCompany\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var d={};function t(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function r(e,n){var i={kind:e.kind,definitions:[t(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=d[n]||new Set,r=new Set,l=new Set;a.forEach((function(e){l.add(e)}));while(l.size>0){var o=l;l=new Set,o.forEach((function(e){if(!r.has(e)){r.add(e);var n=d[e]||new Set;n.forEach((function(e){l.add(e)}))}}))}return r.forEach((function(n){var a=t(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),d[e.name.value]=n}}))})(),e.exports=i,e.exports["publicUserCompanyList"]=r(i,"publicUserCompanyList")},"762e":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetAllVerticalsForCompany"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"companyId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"getAllVerticalsForCompany"},arguments:[{kind:"Argument",name:{kind:"Name",value:"companyId"},value:{kind:"Variable",name:{kind:"Name",value:"companyId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verticalId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"vertical"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:138}};i.loc.source={body:"query GetAllVerticalsForCompany($companyId: Int!) {\n  getAllVerticalsForCompany(companyId: $companyId) {\n    verticalId\n    vertical\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var d={};function t(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function r(e,n){var i={kind:e.kind,definitions:[t(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=d[n]||new Set,r=new Set,l=new Set;a.forEach((function(e){l.add(e)}));while(l.size>0){var o=l;l=new Set,o.forEach((function(e){if(!r.has(e)){r.add(e);var n=d[e]||new Set;n.forEach((function(e){l.add(e)}))}}))}return r.forEach((function(n){var a=t(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),d[e.name.value]=n}}))})(),e.exports=i,e.exports["GetAllVerticalsForCompany"]=r(i,"GetAllVerticalsForCompany")},"98c2":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"AddUserCompany"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"companyVerticalId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addUserCompany"},arguments:[{kind:"Argument",name:{kind:"Name",value:"companyVerticalId"},value:{kind:"Variable",name:{kind:"Name",value:"companyVerticalId"}}},{kind:"Argument",name:{kind:"Name",value:"userId"},value:{kind:"Variable",name:{kind:"Name",value:"userId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"companyVerticalId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"userId"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:187}};i.loc.source={body:"mutation AddUserCompany($companyVerticalId: Int!, $userId: Int!) {\n  addUserCompany(companyVerticalId: $companyVerticalId, userId: $userId) {\n    id\n    companyVerticalId\n    userId\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var d={};function t(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function r(e,n){var i={kind:e.kind,definitions:[t(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=d[n]||new Set,r=new Set,l=new Set;a.forEach((function(e){l.add(e)}));while(l.size>0){var o=l;l=new Set,o.forEach((function(e){if(!r.has(e)){r.add(e);var n=d[e]||new Set;n.forEach((function(e){l.add(e)}))}}))}return r.forEach((function(n){var a=t(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),d[e.name.value]=n}}))})(),e.exports=i,e.exports["AddUserCompany"]=r(i,"AddUserCompany")},"9c7f":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdateCompanyVertical"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"companyVerticalId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"companyId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"verticalId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userCompanyId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateCompanyVertical"},arguments:[{kind:"Argument",name:{kind:"Name",value:"companyVerticalId"},value:{kind:"Variable",name:{kind:"Name",value:"companyVerticalId"}}},{kind:"Argument",name:{kind:"Name",value:"companyId"},value:{kind:"Variable",name:{kind:"Name",value:"companyId"}}},{kind:"Argument",name:{kind:"Name",value:"verticalId"},value:{kind:"Variable",name:{kind:"Name",value:"verticalId"}}},{kind:"Argument",name:{kind:"Name",value:"userCompanyId"},value:{kind:"Variable",name:{kind:"Name",value:"userCompanyId"}}},{kind:"Argument",name:{kind:"Name",value:"userId"},value:{kind:"Variable",name:{kind:"Name",value:"userId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"companyId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"verticalId"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:334}};i.loc.source={body:"mutation UpdateCompanyVertical($companyVerticalId: Int!, $companyId: Int!, $verticalId: Int!, $userCompanyId: Int!, $userId: Int!){\n  updateCompanyVertical(companyVerticalId: $companyVerticalId, companyId: $companyId, verticalId: $verticalId, userCompanyId: $userCompanyId, userId: $userId) {\n    id\n    companyId\n    verticalId\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var d={};function t(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function r(e,n){var i={kind:e.kind,definitions:[t(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=d[n]||new Set,r=new Set,l=new Set;a.forEach((function(e){l.add(e)}));while(l.size>0){var o=l;l=new Set,o.forEach((function(e){if(!r.has(e)){r.add(e);var n=d[e]||new Set;n.forEach((function(e){l.add(e)}))}}))}return r.forEach((function(n){var a=t(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),d[e.name.value]=n}}))})(),e.exports=i,e.exports["UpdateCompanyVertical"]=r(i,"UpdateCompanyVertical")},a434:function(e,n,i){"use strict";var a=i("23e7"),d=i("23cb"),t=i("a691"),r=i("50c4"),l=i("7b0b"),o=i("65f0"),m=i("8418"),c=i("1dde"),u=i("ae40"),s=c("splice"),v=u("splice",{ACCESSORS:!0,0:0,1:2}),k=Math.max,f=Math.min,p=9007199254740991,y="Maximum allowed length exceeded";a({target:"Array",proto:!0,forced:!s||!v},{splice:function(e,n){var i,a,c,u,s,v,N=l(this),I=r(N.length),b=d(e,I),V=arguments.length;if(0===V?i=a=0:1===V?(i=0,a=I-b):(i=V-2,a=f(k(t(n),0),I-b)),I+i-a>p)throw TypeError(y);for(c=o(N,a),u=0;u<a;u++)s=b+u,s in N&&m(c,u,N[s]);if(c.length=a,i<a){for(u=b;u<I-a;u++)s=u+a,v=u+i,s in N?N[v]=N[s]:delete N[v];for(u=I;u>I-a+i;u--)delete N[u-1]}else if(i>a)for(u=I-a;u>b;u--)s=u+a-1,v=u+i-1,s in N?N[v]=N[s]:delete N[v];for(u=0;u<i;u++)N[u+b]=arguments[u+2];return N.length=I-a+i,c}})},b5ae:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"AddUserToCompanyVertical"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"companyId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"verticalId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addUserToCompanyVertical"},arguments:[{kind:"Argument",name:{kind:"Name",value:"userId"},value:{kind:"Variable",name:{kind:"Name",value:"userId"}}},{kind:"Argument",name:{kind:"Name",value:"companyId"},value:{kind:"Variable",name:{kind:"Name",value:"companyId"}}},{kind:"Argument",name:{kind:"Name",value:"verticalId"},value:{kind:"Variable",name:{kind:"Name",value:"verticalId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"companyVerticalId"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:220}};i.loc.source={body:"mutation AddUserToCompanyVertical($userId: Int!, $companyId: Int!, $verticalId: Int!){\n  addUserToCompanyVertical(userId: $userId, companyId: $companyId, verticalId: $verticalId) \t{\n    userId\n    companyVerticalId\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var d={};function t(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function r(e,n){var i={kind:e.kind,definitions:[t(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=d[n]||new Set,r=new Set,l=new Set;a.forEach((function(e){l.add(e)}));while(l.size>0){var o=l;l=new Set,o.forEach((function(e){if(!r.has(e)){r.add(e);var n=d[e]||new Set;n.forEach((function(e){l.add(e)}))}}))}return r.forEach((function(n){var a=t(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),d[e.name.value]=n}}))})(),e.exports=i,e.exports["AddUserToCompanyVertical"]=r(i,"AddUserToCompanyVertical")},e130:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"fetchAllCompanies"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:51}};i.loc.source={body:"query {\n  fetchAllCompanies {\n    id\n    name\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var d={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),d[e.name.value]=n}}))})(),e.exports=i},e8eb:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdateUserCompany"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userCompanyId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isDeleted"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"companyVerticalId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateUserCompany"},arguments:[{kind:"Argument",name:{kind:"Name",value:"userCompanyId"},value:{kind:"Variable",name:{kind:"Name",value:"userCompanyId"}}},{kind:"Argument",name:{kind:"Name",value:"isDeleted"},value:{kind:"Variable",name:{kind:"Name",value:"isDeleted"}}},{kind:"Argument",name:{kind:"Name",value:"companyVerticalId"},value:{kind:"Variable",name:{kind:"Name",value:"companyVerticalId"}}},{kind:"Argument",name:{kind:"Name",value:"userId"},value:{kind:"Variable",name:{kind:"Name",value:"userId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"companyVerticalId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"userId"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:288}};i.loc.source={body:"mutation UpdateUserCompany ($userCompanyId: Int!, $isDeleted: Int!, $companyVerticalId: Int!, $userId: Int!) {\n  updateUserCompany(userCompanyId: $userCompanyId, isDeleted: $isDeleted, companyVerticalId: $companyVerticalId, userId: $userId) {\n    id\n    companyVerticalId\n    userId\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var d={};function t(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function r(e,n){var i={kind:e.kind,definitions:[t(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=d[n]||new Set,r=new Set,l=new Set;a.forEach((function(e){l.add(e)}));while(l.size>0){var o=l;l=new Set,o.forEach((function(e){if(!r.has(e)){r.add(e);var n=d[e]||new Set;n.forEach((function(e){l.add(e)}))}}))}return r.forEach((function(n){var a=t(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),d[e.name.value]=n}}))})(),e.exports=i,e.exports["UpdateUserCompany"]=r(i,"UpdateUserCompany")},fb66:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"AddUser"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"firstName"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"lastName"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ohrid"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isVOC"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isVOD"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isReviewer"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isAdmin"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"companyId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"verticalId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addUser"},arguments:[{kind:"Argument",name:{kind:"Name",value:"firstName"},value:{kind:"Variable",name:{kind:"Name",value:"firstName"}}},{kind:"Argument",name:{kind:"Name",value:"lastName"},value:{kind:"Variable",name:{kind:"Name",value:"lastName"}}},{kind:"Argument",name:{kind:"Name",value:"ohrid"},value:{kind:"Variable",name:{kind:"Name",value:"ohrid"}}},{kind:"Argument",name:{kind:"Name",value:"isVOC"},value:{kind:"Variable",name:{kind:"Name",value:"isVOC"}}},{kind:"Argument",name:{kind:"Name",value:"isVOD"},value:{kind:"Variable",name:{kind:"Name",value:"isVOD"}}},{kind:"Argument",name:{kind:"Name",value:"isReviewer"},value:{kind:"Variable",name:{kind:"Name",value:"isReviewer"}}},{kind:"Argument",name:{kind:"Name",value:"isAdmin"},value:{kind:"Variable",name:{kind:"Name",value:"isAdmin"}}},{kind:"Argument",name:{kind:"Name",value:"companyId"},value:{kind:"Variable",name:{kind:"Name",value:"companyId"}}},{kind:"Argument",name:{kind:"Name",value:"verticalId"},value:{kind:"Variable",name:{kind:"Name",value:"verticalId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"firstName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lastName"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:407}};i.loc.source={body:"mutation AddUser($firstName: String!, $lastName: String!, $ohrid: Int!, $isVOC: Int!, $isVOD: Int!, $isReviewer: Int!, $isAdmin: Int!, $companyId: Int!, $verticalId: Int!) {\n  addUser(firstName: $firstName, lastName: $lastName, ohrid: $ohrid, isVOC: $isVOC, isVOD: $isVOD, isReviewer: $isReviewer, isAdmin: $isAdmin, companyId: $companyId, verticalId: $verticalId) {\n    id,\n    firstName\n    lastName\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var d={};function t(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function r(e,n){var i={kind:e.kind,definitions:[t(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=d[n]||new Set,r=new Set,l=new Set;a.forEach((function(e){l.add(e)}));while(l.size>0){var o=l;l=new Set,o.forEach((function(e){if(!r.has(e)){r.add(e);var n=d[e]||new Set;n.forEach((function(e){l.add(e)}))}}))}return r.forEach((function(n){var a=t(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),d[e.name.value]=n}}))})(),e.exports=i,e.exports["AddUser"]=r(i,"AddUser")}}]);
//# sourceMappingURL=chunk-0abde34c.c6026d75.js.map