{"version":3,"sources":["webpack:///./src/views/mobile/dashboard-pages/user-pages/add-new-user.vue?a3a4","webpack:///src/views/mobile/dashboard-pages/user-pages/add-new-user.vue","webpack:///./src/views/mobile/dashboard-pages/user-pages/add-new-user.vue?9ace","webpack:///./src/views/mobile/dashboard-pages/user-pages/add-new-user.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","directives","name","rawName","value","expression","isReadOnly","domProps","on","$event","target","composing","userOhrid","userFirstName","userLastName","ref","isAdminReadOnly","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","val","_value","adminRole","multiple","userRole","preventDefault","$router","back","_e","class","saveButtonDisable","saveUser","staticRenderFns","data","userId","isEditMode","selectedAccount","languages","accountData","verticalData","selectedVertical","validationErrors","editSaveToggle","isEditingCompanyVertical","editableCompanyVerticals","computed","watch","$route","oldVal","currentVal","renderReady","getUserDetails","deactivated","mounted","methods","checkUserInput","console","log","fn","ln","ohrid","length","push","hasNumber","test","firstName","lastName","parseInt","isVOC","isVOD","isAdmin","makeCompanyVerticalEditable","companyVerticalRow","id","addUserToCompanyVertical","softDeleteUserCompany","index","softDeleteRequired","splice","addNewRowForCompanyVertical","companyId","verticalId","newRow","addNewRowForCompanyVerticalValues","component"],"mappings":"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","file":"js/chunk-2d2183d0.786c95fe.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"dashboard-user-edit-page h-min-screen bg-white p-5 mt-12\"},[_c('h1',{staticClass:\"text-xl font-bold text-gray-700 mb-4\"},[_vm._v(\" Add user \")]),_c('form',[_c('label',{staticClass:\"block font-bold letter-spacing-05 mb-1 ml-1 text-gray-600 text-xs uppercase\",attrs:{\"for\":\"ohrid\"}},[_vm._v(\"OHR Id\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.userOhrid),expression:\"userOhrid\"}],staticClass:\"block appearance-none w-full bg-gray-100 border border-gray-400 hover:border-gray-500 px-4 py-2 rounded leading-tight focus:outline-none\",attrs:{\"id\":\"ohrid\",\"type\":\"number\",\"placeholder\":\"Ex: 30000000\",\"minlength\":\"7\",\"maxlength\":\"9\",\"readonly\":_vm.isReadOnly},domProps:{\"value\":(_vm.userOhrid)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.userOhrid=$event.target.value}}}),_c('label',{staticClass:\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-xs uppercase\",attrs:{\"for\":\"ohrid\"}},[_vm._v(\"First Name\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.userFirstName),expression:\"userFirstName\"}],staticClass:\"block appearance-none w-full bg-gray-100 border border-gray-400 hover:border-gray-500 px-4 py-2 rounded leading-tight focus:outline-none\",attrs:{\"id\":\"ohrid\",\"type\":\"text\",\"placeholder\":\"Ex: Rahul\",\"readonly\":_vm.isReadOnly},domProps:{\"value\":(_vm.userFirstName)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.userFirstName=$event.target.value}}}),_c('label',{staticClass:\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-xs uppercase\",attrs:{\"for\":\"ohrid\"}},[_vm._v(\"Last Name\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.userLastName),expression:\"userLastName\"}],staticClass:\"block appearance-none w-full bg-gray-100 border border-gray-400 hover:border-gray-500 px-4 py-2 rounded leading-tight focus:outline-none\",attrs:{\"id\":\"ohrid\",\"type\":\"text\",\"placeholder\":\"Ex: Jain\",\"readonly\":_vm.isReadOnly},domProps:{\"value\":(_vm.userLastName)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.userLastName=$event.target.value}}}),_c('div',{staticClass:\"relative\"},[_c('label',{staticClass:\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-grey-darkest text-xs uppercase\",attrs:{\"for\":\"user-role-select\"}},[_vm._v(\"Admin Role\")]),_c('div',{staticClass:\"relative\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.adminRole),expression:\"adminRole\"}],ref:\"user-role-select\",staticClass:\"block appearance-none w-full bg-gray-100 border border-gray-400\\n          hover:border-gray-500 px-4 py-2 pr-8 rounded leading-tight focus:outline-none\",attrs:{\"id\":\"user-role-select\",\"disabled\":_vm.isAdminReadOnly},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.adminRole=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\" Yes \")]),_c('option',{attrs:{\"value\":\"0\"}},[_vm._v(\" No \")])]),_c('div',{staticClass:\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-600\"},[_c('svg',{staticClass:\"fill-current h-4 w-4\",attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"viewBox\":\"0 0 20 20\"}},[_c('path',{attrs:{\"d\":\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"}})])])])]),_c('div',{staticClass:\"relative\"},[_c('label',{staticClass:\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-grey-darkest text-xs uppercase\",attrs:{\"for\":\"user-role-select\"}},[_vm._v(\"User role\")]),_c('div',{staticClass:\"relative\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.userRole),expression:\"userRole\"}],ref:\"user-role-select\",staticClass:\"block appearance-none w-full bg-gray-100 border border-gray-400\\n          hover:border-gray-500 px-4 py-2 pr-8 rounded leading-tight focus:outline-none\",attrs:{\"id\":\"user-role-select\",\"disabled\":_vm.isReadOnly},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.userRole=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\"}},[_vm._v(\" --- \")]),_c('option',{attrs:{\"value\":\"voc\"}},[_vm._v(\" VOS \")]),_c('option',{attrs:{\"value\":\"vod\"}},[_vm._v(\" VOD \")])]),_c('div',{staticClass:\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-600\"},[_c('svg',{staticClass:\"fill-current h-4 w-4\",attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"viewBox\":\"0 0 20 20\"}},[_c('path',{attrs:{\"d\":\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"}})])])])]),(_vm.userRole && (_vm.userRole === 'voc' || _vm.userRole === 'vod') || _vm.adminRole==1)?_c('div',{staticClass:\"cta-cont text-right mt-8\"},[_c('button',{staticClass:\"border-2 border-gray-300 rounded px-4 py-1 text-gray-700 w-24 mr-3\",on:{\"click\":function($event){$event.preventDefault();return _vm.$router.back()}}},[_vm._v(\" Cancel \")]),(!_vm.isReadOnly)?_c('button',{staticClass:\"border-2 rounded px-4 py-1 w-24\",class:_vm.saveButtonDisable ? 'border-gray-400 text-gray-500 w-24' : 'border-green-400 text-green-500',attrs:{\"disabled\":_vm.saveButtonDisable},on:{\"click\":function($event){$event.preventDefault();return _vm.saveUser($event)}}},[_vm._v(\" Save \")]):_vm._e()]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <section class=\"dashboard-user-edit-page h-min-screen bg-white p-5 mt-12\">\n    <h1\n      class=\"text-xl font-bold text-gray-700 mb-4\"\n    >\n      Add user\n    </h1>\n    <form>\n      <label\n        class=\"block font-bold letter-spacing-05 mb-1 ml-1 text-gray-600 text-xs uppercase\"\n        for=\"ohrid\"\n      >OHR Id</label>\n      <input\n        id=\"ohrid\"\n        v-model=\"userOhrid\"\n        class=\"block appearance-none w-full bg-gray-100 border border-gray-400 hover:border-gray-500 px-4 py-2 rounded leading-tight focus:outline-none\"\n        type=\"number\"\n        placeholder=\"Ex: 30000000\"\n        minlength=\"7\"\n        maxlength=\"9\"\n        :readonly=\"isReadOnly\"\n      >\n\n      <label\n        class=\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-xs uppercase\"\n        for=\"ohrid\"\n      >First Name</label>\n      <input\n        id=\"ohrid\"\n        v-model=\"userFirstName\"\n        class=\"block appearance-none w-full bg-gray-100 border border-gray-400 hover:border-gray-500 px-4 py-2 rounded leading-tight focus:outline-none\"\n        type=\"text\"\n        placeholder=\"Ex: Rahul\"\n        :readonly=\"isReadOnly\"\n      >\n\n      <label\n        class=\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-xs uppercase\"\n        for=\"ohrid\"\n      >Last Name</label>\n      <input\n        id=\"ohrid\"\n        v-model=\"userLastName\"\n        class=\"block appearance-none w-full bg-gray-100 border border-gray-400 hover:border-gray-500 px-4 py-2 rounded leading-tight focus:outline-none\"\n        type=\"text\"\n        placeholder=\"Ex: Jain\"\n        :readonly=\"isReadOnly\"\n      >\n      <div class=\"relative\">\n        <label\n          class=\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-grey-darkest text-xs uppercase\"\n          for=\"user-role-select\"\n        >Admin Role</label>\n        <div class=\"relative\">\n          <select\n            id=\"user-role-select\"\n            ref=\"user-role-select\"\n            v-model=\"adminRole\"\n            class=\"block appearance-none w-full bg-gray-100 border border-gray-400\n            hover:border-gray-500 px-4 py-2 pr-8 rounded leading-tight focus:outline-none\"\n            :disabled=\"isAdminReadOnly\"\n          >\n            <option value=\"1\">\n              Yes\n            </option>\n            <option value=\"0\">\n              No\n            </option>\n          </select>\n          <div\n            class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-600\"\n          >\n            <svg\n              class=\"fill-current h-4 w-4\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n            >\n              <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n            </svg>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"relative\">\n        <label\n          class=\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-grey-darkest text-xs uppercase\"\n          for=\"user-role-select\"\n        >User role</label>\n        <div class=\"relative\">\n          <select\n            id=\"user-role-select\"\n            ref=\"user-role-select\"\n            v-model=\"userRole\"\n            class=\"block appearance-none w-full bg-gray-100 border border-gray-400\n            hover:border-gray-500 px-4 py-2 pr-8 rounded leading-tight focus:outline-none\"\n            :disabled=\"isReadOnly\"\n          >\n            <!--  @change=\"onUserRoleChanged\" -->\n            <option value>\n              ---\n            </option>\n            <option value=\"voc\">\n              VOS\n            </option>\n            <option value=\"vod\">\n              VOD\n            </option>\n          </select>\n          <div\n            class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-600\"\n          >\n            <svg\n              class=\"fill-current h-4 w-4\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n            >\n              <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n            </svg>\n          </div>\n        </div>\n      </div>\n\n      <!-- <div v-if=\"!isEditMode && userRole && userRole !== 'admin'\">\n        <div v-if=\"!isReadOnly\" class=\"relative\">\n          <label\n            class=\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-grey-darkest text-xs uppercase\"\n            for=\"user-account-select\"\n          >Account to be aligned</label>\n          <div class=\"relative\">\n            <select\n              id=\"user-account-select\"\n              ref=\"user-account-select\"\n              v-model=\"selectedAccount\"\n              class=\"block appearance-none w-full bg-gray-100\n              border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded leading-tight focus:outline-none\"\n              @change=\"onAccountSelect\"\n            >\n              <option value>\n                ---\n              </option>\n              <option\n                v-for=\"(item, index) in accountData\"\n                :key=\"index\"\n                :value=\"item\"\n              >\n                {{ item.name }}\n              </option>\n            </select>\n            <div\n              class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-600\"\n            >\n              <svg\n                class=\"fill-current h-4 w-4\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path\n                  d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"\n                />\n              </svg>\n            </div>\n          </div>\n        </div>\n        <div v-if=\"!isReadOnly\" class=\"relative\">\n          <label\n            class=\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-grey-darkest text-xs uppercase\"\n            for=\"user-vertical-select\"\n          >Vertical to be aligned</label>\n          <div class=\"relative\">\n            <select\n              id=\"user-vertical-select\"\n              ref=\"user-vertical-select\"\n              v-model=\"selectedVertical\"\n              class=\"block appearance-none w-full bg-gray-100 border\n              border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded leading-tight focus:outline-none\"\n            >\n              <option value>\n                ---\n              </option>\n              <option\n                v-for=\"item in verticalData\"\n                :key=\"item.verticalId\"\n                :value=\"item\"\n              >\n                {{ item.name }}\n              </option>\n            </select>\n            <div\n              class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-600\"\n            >\n              <svg\n                class=\"fill-current h-4 w-4\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path\n                  d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"\n                />\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div> -->\n      <!-- save and cancel button -->\n      <div v-if=\"userRole && (userRole === 'voc' || userRole === 'vod') || adminRole==1\" class=\"cta-cont text-right mt-8\">\n        <button\n          class=\"border-2 border-gray-300 rounded px-4 py-1 text-gray-700 w-24 mr-3\"\n          @click.prevent=\"$router.back()\"\n        >\n          Cancel\n        </button>\n        <button\n          v-if=\"!isReadOnly\"\n          class=\"border-2 rounded px-4 py-1 w-24\"\n          :class=\"saveButtonDisable ? 'border-gray-400 text-gray-500 w-24' : 'border-green-400 text-green-500'\"\n          :disabled=\"saveButtonDisable\"\n          @click.prevent=\"saveUser\"\n        >\n          Save\n        </button>\n      </div>\n\n      <!-- Dynamic company vertical section -->\n      <!-- <h1  v-if=\"editableCompanyVerticals\" class=\"text-xl font-bold text-gray-700 mb-4 mt-4\">\n        {{ 'Assigned Accounts' }}\n      </h1>\n      <section v-if=\"editableCompanyVerticals\">\n        <div v-for=\"(companyVerticalRow, index) in editableCompanyVerticals\" :key=\"index\">\n\n          <div v-if=\"userRole && (userRole === 'voc' || userRole === 'vod')\">\n            <div class=\"relative\">\n              <label\n                class=\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-grey-darkest text-xs uppercase\"\n                for=\"user-account-select\"\n              >Account to be aligned</label>\n              <div class=\"relative\">\n                <select\n                  id=\"user-account-select\"\n                  ref=\"user-account-select\"\n                  v-model=\"companyVerticalRow.selectedAccount\"\n                  class=\"block appearance-none w-full bg-gray-100\n                  border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded leading-tight focus:outline-none\"\n                  :disabled=\"companyVerticalRow.isEditingCompanyVertical\"\n                  @change=\"onAccountSelect(companyVerticalRow, $event)\"\n                >\n                  <option value>\n                    ---\n                  </option>\n                  <option\n                    v-for=\"(item) in accountData\"\n                    :key=\"item.id\"\n                    :value=\"item.id\"\n                  >\n                    {{ item.name }}\n                  </option>\n                </select>\n                <div\n                  class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-600\"\n                >\n                  <svg\n                    class=\"fill-current h-4 w-4\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path\n                      d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"\n                    />\n                  </svg>\n                </div>\n              </div>\n            </div>\n              <div class=\"relative\">\n              <label\n                class=\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-grey-darkest text-xs uppercase\"\n                for=\"user-vertical-select\"\n              >Vertical to be aligned</label>\n              <div class=\"relative\">\n                <select\n                  id=\"user-vertical-select\"\n                  ref=\"user-vertical-select\"\n                  v-model=\"companyVerticalRow.selectedVertical\"\n                  class=\"block appearance-none w-full bg-gray-100 border\n                  border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded leading-tight focus:outline-none\"\n                  :disabled=\"!companyVerticalRow.isEditingCompanyVertical\"\n                >\n                  <option value>\n                    ---\n                  </option>\n                  <option\n                    v-for=\"item in verticalData\"\n                    :key=\"item.id\"\n                    :value=\"item.name\"\n                  >\n                    {{ item.name }}\n                  </option>\n                </select>\n                <div\n                  class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-600\"\n                >\n                  <svg\n                    class=\"fill-current h-4 w-4\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path\n                      d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"\n                    />\n                  </svg>\n                </div>\n              </div>\n            </div> -->\n      <!-- <div class=\"relative\">\n              <label\n                class=\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-grey-darkest text-xs uppercase\"\n                for=\"user-vertical-select\"\n              >\n                Vertical\n              </label>\n              <div class=\"relative\">\n                <input\n                  id=\"\"\n                  v-model=\"companyVerticalRow.selectedVertical\"\n                  class=\"block appearance-none w-full bg-gray-100 border border-gray-400 hover:border-gray-500 px-4 py-2\n                  rounded leading-tight focus:outline-none\"\n                  type=\"text\"\n                  placeholder=\"Ex: Jain\"\n                  :readonly=\"true\"\n                >\n\n              </div>\n            </div>\n            <div class=\"cta-cont text-right mt-8\">\n              <button\n                class=\"border-2 rounded px-4 py-1 w-24\"\n                :class=\"!companyVerticalRow.isEditingCompanyVertical ? 'border-green-400 text-green-500' : 'border-gray-400 text-gray-500 w-24'\"\n               @click=\"makeCompanyVerticalEditable(companyVerticalRow)\"\n              >\n\n                <span v-if=\"!companyVerticalRow.isEditingCompanyVertical\">Save</span>\n                <span v-else>Edit</span>\n              </button>\n              <button\n                class=\"border-2 rounded px-4 py-1 w-24\"\n                :class=\"!companyVerticalRow.isEditingCompanyVertical ? 'border-red-400 text-red-500' : 'border-gray-400 text-gray-500'\"\n                :disabled=\"companyVerticalRow.isEditingCompanyVertical\"\n                @click=\"softDeleteUserCompany(index)\"\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n\n        </div>\n\n         <div v-if=\"userRole && (userRole === 'voc' || userRole === 'vod')\" class=\"cta-cont text-right mt-12 mb-12\">\n          <button\n            class=\"border-2 border-gray-300 rounded px-4 py-1 text-gray-700 w-full m-auto border-green-400 text-green-500\"\n            @click.prevent=\"addNewRowForCompanyVertical()\"\n          >\n            Assign To Company Vertical\n          </button>\n        </div>\n      </section> -->\n    </form>\n  </section>\n</template>\n\n<script>\nimport ADD_USER from '@/graphql/addUser.gql';\nimport FETCH_ALL_COMPANIES from '@/graphql/fetchAllCompanies.gql';\n// import GETALL_VERTICALS from '@/graphql/fetchAllVerticals.gql';\n// import UPDATE_USER from '@/graphql/updateUser.gql';\nimport ADD_USER_TO_COMPANY_VERTICAL from '@/graphql/addUserToCompanyVertical.gql';\nimport UPDATE_COMPANY_VERICAL from '@/graphql/updateCompanyVertical.gql';\nimport ADD_USER_COMPANY from '@/graphql/addUserCompany.gql';\nimport UPDATE_USER_COMPANY from '@/graphql/updateUserCompany.gql';\nimport GET_VERTICALS_FOR_COMPANY from '@/graphql/getAllVerticalsForCompany.gql';\n// import GETALL_VERTICALS_FROM_COMPANY from '@/graphql/getVerticalByCompany.gql';\n// import GET_USER_COMAPNY_VERTICALS from '@/graphql/userCompanyList.gql';\n// this can be use to update and data\nimport GET_USER_COMAPNY_VERTICALS from '@/graphql/publicUserCompanyList.gql';\n// import GET_ALL_COMPANY_VERTICALS from '@/graphql/publicUserCompanyList.gql';\n\nexport default {\n  name: 'UserEdit',\n  data() {\n    return {\n      userId: '',\n      userOhrid: '',\n      userFirstName: '',\n      userLastName: '',\n      userRole: '',\n      adminRole: 0,\n      isEditMode: false,\n      selectedAccount: '',\n      languages: [1],\n      accountData: [],\n      verticalData: [],\n      selectedVertical: '',\n      validationErrors: [],\n      isReadOnly: false,\n      isAdminReadOnly: true,\n      editSaveToggle: [],\n      isEditingCompanyVertical: false,\n      editableCompanyVerticals: [\n        {\n          id: '',\n          companyId: '',\n          verticalId: '',\n          isEditingCompanyVertical: false,\n          selectedAccount: '',\n          selectedVertical: '',\n          softDeleteRequired: false,\n        },\n      ],\n    };\n  },\n  computed: {\n    saveButtonDisable() {\n      // TODO: Review this one! using same function to disable button and change its color\n\n      if (this.adminRole === 1) {\n        return false;\n      } if (this.userRole === '') {\n        return true;\n      // } if (this.selectedAccount === '') {\n      //   return true;\n      // } if (this.selectedVertical === '') {\n      //   return true;\n      } // if (this.userRole === 'admin') {\n      //   return false;\n      // }\n      return false;\n    },\n  },\n  watch: {\n    $route(currentVal, oldVal) {\n      if (oldVal.name === 'Dashboard.Admin' && currentVal.name === 'Dashboard.User.Edit') {\n        this.renderReady = false;\n        this.getUserDetails();\n        // this.onUserRoleChanged();\n        // this.getUserCompanyVerticals();\n        // this.onAccountSelect();\n      }\n    },\n  },\n  deactivated() {\n    this.userOhrid = '';\n    this.userFirstName = '';\n    this.userLastName = '';\n    this.userRole = '';\n    this.adminRole = 0;\n    this.selectedAccount = '';\n    this.selectedVertical = '';\n    this.accountData = [];\n    this.verticalData = [];\n    this.validationErrors = [];\n  },\n  mounted() {\n    this.getUserDetails();\n    // this.onUserRoleChanged();\n    // this.getUserCompanyVerticals();\n    // this.onAccountSelect();\n    // this.getAllCompanyVerticals();\n  },\n  methods: {\n    async addUser(firstName, lastName, ohrid, isVOC, isVOD, isReviewer, isAdmin, companyId, verticalId) {\n      try {\n        const result = await this.$apollo.mutate({\n          mutation: ADD_USER,\n          variables: {\n            firstName,\n            lastName,\n            ohrid,\n            isVOC,\n            isVOD,\n            isReviewer,\n            isAdmin,\n            companyId,\n            verticalId,\n          },\n        });\n        console.log('addUser', result);\n      } catch (error) {\n        console.log(error.message);\n      }\n    },\n    async updateUser(userId, isVoc, isVod, isAdmin) {\n      // try {\n      //   const { data } = await this.$apollo.mutate({\n      //     mutation: UPDATE_USER,\n      //     variables: {\n      //       userId,\n      //       isVoc,\n      //       isVod,\n      //       isAdmin,\n      //     },\n      //   });\n      //   console.log('updateUser', data);\n      // } catch (error) {\n      //   console.log(error.message);\n      // }\n    },\n    async addUserToCompanyVertical(userId, companyId, verticalId) {\n      try {\n        const { data } = await this.$apollo.mutate({\n          mutation: ADD_USER_TO_COMPANY_VERTICAL,\n          variables: {\n            userId,\n            companyId,\n            verticalId,\n          },\n        });\n        console.log('addUserToCompanyVertical', data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    },\n    async updateCompanyVertical(companyVerticalId, companyId, verticalId, userCompanyId, userId) {\n      try {\n        const { data } = await this.$apollo.mutate({\n          mutation: UPDATE_COMPANY_VERICAL,\n          variables: {\n            companyVerticalId,\n            companyId,\n            verticalId,\n            userCompanyId,\n            userId,\n          },\n        });\n        console.log('updateCompanyVertical', data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    },\n    async addUserCompany(companyVerticalId, userId) {\n      try {\n        const { data } = await this.$apollo.mutate({\n          mutation: ADD_USER_COMPANY,\n          variables: {\n            companyVerticalId,\n            userId,\n          },\n        });\n        console.log('addUserCompany', data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    },\n    async updateUserCompany(userCompanyId, companyVerticalId, userId, isDeleted) {\n      try {\n        const { data } = await this.$apollo.mutate({\n          mutation: UPDATE_USER_COMPANY,\n          variables: {\n            userCompanyId,\n            companyVerticalId,\n            userId,\n            isDeleted,\n          },\n        });\n        console.log('updateUserCompany', data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    },\n    // async onAccountSelect(companyVerticalRow, event) {\n    // try {\n    // console.log(event.target.dataset);\n    // console.log('ID:', event.target.dataset.id);\n    // const companyID = parseInt(event.target.value);\n    // console.log(`company id :${companyID}`);\n    // console.log(companyVerticalRow);\n    // let { data } = await this.$apollo.query({\n    //   query: GETALL_VERTICALS_FROM_COMPANY,\n    //   variables: {\n    //     // id: companyID,\n    //   },\n    // });\n    // console.log(`darta : is : ${JSON.stringify(data)}`);\n    // data = data.getVerticalByCompany;\n    // [data] = data;\n    // console.log(`data is: ${JSON.stringify(data)}`);\n    // console.log(data.getVerticalByCompany);\n    // companyVerticalRow.selectedVertical = data.name;\n    // companyVerticalRow.companyId = companyID;\n    // companyVerticalRow.selectedVertical = data.getVerticalByCompany.name;\n\n    // console.log('TCL: onAccountSelect -> this.verticalData', this.verticalData);\n    //   } catch (error) {\n    //     console.log('vertical error -> ', error);\n    //   }\n    //   // this.verticalData = this.accountData.filter(ad  => ad.companyId === this.selectedAccount.companyId);\n    // },\n    async onUserRoleChanged() {\n      try {\n        console.log('onchange role called !!');\n        const { data } = await this.$apollo.query({ query: FETCH_ALL_COMPANIES });\n        this.accountData = data.fetchAllCompanies;\n      } catch (error) {\n        this.$store.dispatch('addToastNotifications', {\n          text: error.message,\n          timer: 4000,\n          type: 'error',\n        });\n      }\n      return this.accountData;\n    },\n    async getAllVerticalByCompany(companyId) {\n      try {\n        const { data } = await this.$apollo.query({\n          query: GET_VERTICALS_FOR_COMPANY,\n          variables: {\n            companyId,\n          },\n        });\n        console.log(`data is: ${data}`);\n        // this.accountData = data.fetchAllCompanies;\n      } catch (error) {\n        this.$store.dispatch('addToastNotifications', {\n          text: error.message,\n          timer: 4000,\n          type: 'error',\n        });\n      }\n    },\n    checkUserInput(fn, ln, ohrid) {\n      console.log(fn, ln, ohrid);\n      // const hasNumber = /\\d/;\n      const hasNumber = /[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/;\n      if (ohrid.length < 7 || ohrid.length > 9) {\n        this.validationErrors.push('OHRID length should be between 7 - 9!');\n      }\n      if (fn === '') {\n        this.validationErrors.push('First Name is Required!');\n      }\n      if (ln === '') {\n        this.validationErrors.push('Last Name is Required!');\n      }\n      if (hasNumber.test(fn)) {\n        this.validationErrors.push('Enter valid characters in first name!');\n      }\n      if (hasNumber.test(ln)) {\n        this.validationErrors.push('Enter valid characters in last name!');\n      }\n    },\n    async saveUser() {\n      const { userFirstName, userLastName, userOhrid } = this;\n      this.checkUserInput(userFirstName, userLastName, userOhrid);\n      if (this.validationErrors.length > 0) {\n        this.validationErrors.forEach((err) => {\n          this.$store.dispatch('addToastNotifications', {\n            text: err,\n            timer: 4000,\n            type: 'error',\n          });\n        });\n        this.validationErrors = [];\n        return;\n      }\n      // const companyId = this.selectedAccount.id;\n      // const verticalId = this.selectedVertical.id;\n      const variable = {\n        firstName: userFirstName,\n        lastName: userLastName,\n        ohrid: parseInt(userOhrid, 10),\n        isVOC: 0,\n        isVOD: 0,\n        isReviewer: 1,\n        isAdmin: 0,\n        companyId: 0,\n        verticalId: 0,\n      };\n      if (this.userRole === 'voc') {\n        variable.isVOC = 1;\n      } else if (this.userRole === 'vod') {\n        variable.isVOD = 1;\n      } else {\n        variable.companyId = 0;\n        variable.verticalId = 0;\n      }\n      // console.log(`Admin Role : ${parseInt(this.adminRole)}`);\n      if (this.adminRole === 1) {\n        variable.isAdmin = 1;\n      }\n\n      try {\n        // console.log(variable);\n        const result = await this.$apollo.mutate({\n          mutation: ADD_USER,\n          variables: variable,\n        });\n        // console.log(result.data.addUser);\n        // console.log(result.data.addUser.id);\n        const newuserId = result.data.addUser.id;\n        if (!result.data.addUser) {\n          throw new Error(`User with OHRID ${userOhrid} already exists`);\n        }\n        this.$store.dispatch('addToastNotifications', {\n          text: 'User added succesfully!',\n          timer: 4000,\n          type: 'success',\n        });\n        this.$router.push({ path: `/dashboard/admin/user/edit/${newuserId}?isEditMode=true` });\n        // this.$router.go(-1);\n      } catch (error) {\n        this.$store.dispatch('addToastNotifications', {\n          text: `${error.message}`,\n          timer: 4000,\n          type: 'error',\n        });\n      }\n    },\n    getUserDetails() {\n      const {\n        firstName, lastName, ohrid, isVOC, isVOD, isAdmin, isEditMode, userId,\n      } = this.$route.query;\n      if (isEditMode) {\n        this.isEditMode = isEditMode;\n        if (firstName) {\n          this.userFirstName = firstName;\n        }\n        if (lastName) {\n          this.userLastName = lastName;\n        }\n        if (ohrid) {\n          this.userOhrid = ohrid;\n        }\n        if (userId) {\n          this.userId = parseInt(userId, 10);\n          // console.log(`userId: ${this.userId}`);\n        }\n        // if (isVOC == 1) {\n        //   console.log(`isVOC: ${isVOC}`);\n        //   this.userRole = 'voc';\n        // } else if (isVOD == 1) {\n        //   console.log(`isVOD: ${isVOD}`);\n        //   this.userRole = 'vod';\n        // } else if (isAdmin === 1) {\n        //   console.log(`isAdmin: ${isAdmin}`);\n        //   this.userRole = 'admin';\n        // }\n        if (isVOC === 1) {\n          console.log(`isVOC: ${isVOC}`);\n          this.userRole = 'voc';\n        }\n        if (isVOD === 1) {\n          console.log(`isVOD: ${isVOD}`);\n          this.userRole = 'vod';\n        }\n        if (isAdmin) {\n          // console.log(`isAdmin: ${isAdmin}`);\n          this.adminRole = 1;\n        }\n        this.isReadOnly = true;\n      } else {\n        this.isReadOnly = false;\n      }\n      console.log(`is read only is: ${this.isReadOnly}`);\n    },\n    makeCompanyVerticalEditable(companyVerticalRow) {\n      // companyVerticalRow.isEditingCompanyVertical = !companyVerticalRow.isEditingCompanyVertical;\n      if (!companyVerticalRow.isEditingCompanyVertical) {\n        // vert.forEach((element) => {\n\n        // });\n        console.log(`save details to server: ${companyVerticalRow.companyId}`);\n        console.log(`vertical to server: ${companyVerticalRow.verticalId}`);\n        if (companyVerticalRow.selectedAccount && companyVerticalRow.selectedAccount.id && companyVerticalRow.selectedAccount.name) {\n          console.log(`selectedAccount: ${companyVerticalRow.selectedAccount.id},  name:  ${companyVerticalRow.selectedAccount.name}`);\n        }\n        if (companyVerticalRow.selectedVertical && companyVerticalRow.selectedVertical.id && companyVerticalRow.selectedVertical.name) {\n          console.log(`selected vertical: ${companyVerticalRow.selectedVertical.id},   name:  ${companyVerticalRow.selectedVertical.name}`);\n        }\n        if (companyVerticalRow.selectedVertical.id && companyVerticalRow.selectedAccount.id) {\n          console.log(`user is: ${this.userId} type: ${typeof (this.userId)}`);\n          this.addUserToCompanyVertical(this.userId, companyVerticalRow.selectedAccount.id, companyVerticalRow.selectedVertical.id);\n        }\n      }\n    },\n    softDeleteUserCompany(index) {\n      if (this.editableCompanyVerticals) {\n        if (this.editableCompanyVerticals[index] && this.editableCompanyVerticals[index].softDeleteRequired) {\n          // delete entry from server\n          console.log(`id to be deleted from server ${this.editableCompanyVerticals[index].id}`);\n        }\n        // delete entry from ui\n        this.editableCompanyVerticals.splice(index, 1);\n      }\n    },\n    // addNewRowForCompanyVertical() {\n    //   const newRow = {\n    //     id: '',\n    //     companyId: '',\n    //     verticalId: '',\n    //     isEditingCompanyVertical: false,\n    //     selectedAccount: '',\n    //     selectedVertical: '',\n    //     softDeleteRequired: false,\n    //   };\n    //   this.editableCompanyVerticals.push(newRow);\n    // },\n    addNewRowForCompanyVertical() {\n      const newRow = {\n        id: '',\n        companyId: '',\n        verticalId: '',\n        isEditingCompanyVertical: false,\n        selectedAccount: '',\n        selectedVertical: '',\n        softDeleteRequired: false,\n      };\n      this.editableCompanyVerticals.push(newRow);\n    },\n    addNewRowForCompanyVerticalValues(id, companyId, verticalId, selectedAccount, selectedVertical) {\n      const newRow = {\n        id,\n        companyId,\n        verticalId,\n        isEditingCompanyVertical: false,\n        selectedAccount,\n        selectedVertical,\n        softDeleteRequired: true,\n      };\n      this.editableCompanyVerticals.push(newRow);\n    },\n    async getUserCompanyVerticals() {\n      try {\n        const { data } = await this.$apollo.query({\n          query: GET_USER_COMAPNY_VERTICALS,\n          variables: {\n            id: parseInt(this.userId, 10),\n          },\n        });\n        console.log(`publish Data :${data}`);\n        if (data.publicUserCompanyList && data.publicUserCompanyList.length > 0) {\n          // delete first empty row of companyVertical\n          this.editableCompanyVerticals.splice(0, 1);\n          data.publicUserCompanyList.forEach((element) => {\n            const compID = element.companyId;\n            const vertID = element.verticalId;\n            const compVertID = element.companyVerticalId;\n            const selectedAccount = element.company;\n            console.log(`selected Row :${element.company}`);\n            const selectedVertical = element.vertical;\n            this.addNewRowForCompanyVerticalValues(compVertID, compID, vertID, selectedAccount, selectedVertical);\n          });\n        }\n      } catch (error) {\n        console.log(`getUserCompanyVerticals => error is: ${error}`);\n      }\n    },\n    async deleteUserRecord(companyVerticalId, userId) {\n      console.log(`companyvertical id is: ${companyVerticalId} with type ${typeof (companyVerticalId)} and ${userId} with type ${typeof (userId)}`);\n      try {\n        const { data } = await this.$apollo.query({\n          query: GET_USER_COMAPNY_VERTICALS,\n          variables: {\n            companyVerticalId: parseInt(this.companyVerticalId, 10),\n            userId: parseInt(this.userId, 10),\n          },\n        });\n        if (data.publicUserCompanyList && data.publicUserCompanyList.length > 0) {\n          // delete first empty row of companyVertical\n          this.editableCompanyVerticals.splice(0, 1);\n          data.publicUserCompanyList.forEach((element) => {\n            const compID = element.companyId;\n            const vertID = element.verticalId;\n            const compVertID = element.companyVerticalId;\n            const selectedAccount = element.company;\n            const selectedVertical = element.vertical;\n            this.addNewRowForCompanyVerticalValues(compVertID, compID, vertID, selectedAccount, selectedVertical);\n          });\n        }\n      } catch (error) {\n        console.log(`getUserCompanyVerticals => error is: ${error}`);\n      }\n    },\n    async getAllCompanyVerticals() {\n      try {\n        console.log('getAllCompanyVerticals:');\n        const { data } = await this.$apollo.query({\n          query: GET_USER_COMAPNY_VERTICALS,\n        });\n        if (data.getAllCompanyVerticals && data.getAllCompanyVerticals.length > 0) {\n          // delete first empty row of companyVertical\n          console.log(`length:  ${data.getAllCompanyVerticals.length}`);\n        }\n      } catch (error) {\n        console.log(`getAllCompanyVerticals => error is: ${error}`);\n      }\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./add-new-user.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./add-new-user.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./add-new-user.vue?vue&type=template&id=04858eda&\"\nimport script from \"./add-new-user.vue?vue&type=script&lang=js&\"\nexport * from \"./add-new-user.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}