(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-c807e990"],{"17c6":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"addUserToCompanyVerticalS"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"companyvId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addUserToCompanyVerticalS"},arguments:[{kind:"Argument",name:{kind:"Name",value:"companyvId"},value:{kind:"Variable",name:{kind:"Name",value:"companyvId"}}},{kind:"Argument",name:{kind:"Name",value:"userId"},value:{kind:"Variable",name:{kind:"Name",value:"userId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:159}};i.loc.source={body:"mutation addUserToCompanyVerticalS( $companyvId: Int!, $userId: Int! ){\n  addUserToCompanyVerticalS( companyvId: $companyvId, userId: $userId ) \t{\n    id\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function o(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=t[n]||new Set,o=new Set,r=new Set;a.forEach((function(e){r.add(e)}));while(r.size>0){var l=r;r=new Set,l.forEach((function(e){if(!o.has(e)){o.add(e);var n=t[e]||new Set;n.forEach((function(e){r.add(e)}))}}))}return o.forEach((function(n){var a=d(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i,e.exports["addUserToCompanyVerticalS"]=o(i,"addUserToCompanyVerticalS")},2909:function(e,n,i){"use strict";i.d(n,"a",(function(){return l}));var a=i("6b75");function t(e){if(Array.isArray(e))return Object(a["a"])(e)}i("a4d3"),i("e01a"),i("d28b"),i("a630"),i("e260"),i("d3b7"),i("3ca3"),i("ddb0");function d(e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}var o=i("06c5");function r(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function l(e){return t(e)||d(e)||Object(o["a"])(e)||r()}},"4a1a":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateUserState"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isHidden"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateUserState"},arguments:[{kind:"Argument",name:{kind:"Name",value:"userId"},value:{kind:"Variable",name:{kind:"Name",value:"userId"}}},{kind:"Argument",name:{kind:"Name",value:"isHidden"},value:{kind:"Variable",name:{kind:"Name",value:"isHidden"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:128}};i.loc.source={body:"mutation updateUserState($userId: Int!,$isHidden: Int!) {\n  updateUserState(userId: $userId, isHidden: $isHidden) {\n    id\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function o(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=t[n]||new Set,o=new Set,r=new Set;a.forEach((function(e){r.add(e)}));while(r.size>0){var l=r;r=new Set,l.forEach((function(e){if(!o.has(e)){o.add(e);var n=t[e]||new Set;n.forEach((function(e){r.add(e)}))}}))}return o.forEach((function(n){var a=d(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i,e.exports["updateUserState"]=o(i,"updateUserState")},"59b9":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getUser"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"getUser"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"ohrid"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"firstName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lastName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVOC"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVOD"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isReviewer"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isHidden"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:138}};i.loc.source={body:"query getUser($id: Int!) {\n\tgetUser (id: $id) {\n\t\tid\n\t\tohrid\n\t\tfirstName\n\t\tlastName\n\t\tisVOC\n\t\tisVOD\n\t\tisReviewer\n\t\tisAdmin\n\t\tisHidden\n\t}\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function o(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=t[n]||new Set,o=new Set,r=new Set;a.forEach((function(e){r.add(e)}));while(r.size>0){var l=r;r=new Set,l.forEach((function(e){if(!o.has(e)){o.add(e);var n=t[e]||new Set;n.forEach((function(e){r.add(e)}))}}))}return o.forEach((function(n){var a=d(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i,e.exports["getUser"]=o(i,"getUser")},"5dca":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"fetchCompanyVocAndVod"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"fetchCompanyVocAndVod"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"voc"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"vod"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:106}};i.loc.source={body:"query fetchCompanyVocAndVod($id: Int!) {\n  fetchCompanyVocAndVod(id: $id) {\n    name\n    voc\n    vod\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function o(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=t[n]||new Set,o=new Set,r=new Set;a.forEach((function(e){r.add(e)}));while(r.size>0){var l=r;r=new Set,l.forEach((function(e){if(!o.has(e)){o.add(e);var n=t[e]||new Set;n.forEach((function(e){r.add(e)}))}}))}return o.forEach((function(n){var a=d(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i,e.exports["fetchCompanyVocAndVod"]=o(i,"fetchCompanyVocAndVod")},"66ba":function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getVerticalByCompany"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"getVerticalByCompany"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:96}};i.loc.source={body:"query getVerticalByCompany($id: Int!) {\n  getVerticalByCompany(id: $id) {\n    id,\n    name\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function o(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=t[n]||new Set,o=new Set,r=new Set;a.forEach((function(e){r.add(e)}));while(r.size>0){var l=r;r=new Set,l.forEach((function(e){if(!o.has(e)){o.add(e);var n=t[e]||new Set;n.forEach((function(e){r.add(e)}))}}))}return o.forEach((function(n){var a=d(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i,e.exports["getVerticalByCompany"]=o(i,"getVerticalByCompany")},8647:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",alias:{kind:"Name",value:"publicUserCompanyVerticalList"},name:{kind:"Name",value:"publicUserCompanyList"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"company"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"vertical"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"companyVerticalId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"companyId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"verticalId"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:181}};i.loc.source={body:"query {\n   publicUserCompanyVerticalList:publicUserCompanyList {\n        company\n        vertical\n        companyVerticalId\n        type\n        companyId\n        verticalId\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i},a6d6:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"updateUserCompanyByVerticalFlag"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isHidden"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateUserCompanyByVerticalFlag"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"userId"},value:{kind:"Variable",name:{kind:"Name",value:"userId"}}},{kind:"Argument",name:{kind:"Name",value:"isHidden"},value:{kind:"Variable",name:{kind:"Name",value:"isHidden"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:179}};i.loc.source={body:"mutation updateUserCompanyByVerticalFlag($id: Int!,$userId: Int! ,$isHidden: Int!) {\n  updateUserCompanyByVerticalFlag( id: $id,userId:$userId,isHidden: $isHidden ) {\n    id\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function o(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=t[n]||new Set,o=new Set,r=new Set;a.forEach((function(e){r.add(e)}));while(r.size>0){var l=r;r=new Set,l.forEach((function(e){if(!o.has(e)){o.add(e);var n=t[e]||new Set;n.forEach((function(e){r.add(e)}))}}))}return o.forEach((function(n){var a=d(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i,e.exports["updateUserCompanyByVerticalFlag"]=o(i,"updateUserCompanyByVerticalFlag")},b425:function(e,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"fetchCompanyVocAndVodFromCompVertical"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"companyVertical"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"fetchCompanyVocAndVodFromCompVertical"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"companyVertical"},value:{kind:"Variable",name:{kind:"Name",value:"companyVertical"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"voc"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"vod"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:201}};i.loc.source={body:"query fetchCompanyVocAndVodFromCompVertical($id: Int! , $companyVertical: Int! ) {\n  fetchCompanyVocAndVodFromCompVertical( id: $id , companyVertical:$companyVertical ) {\n    name\n    voc\n    vod\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var t={};function d(e,n){for(var i=0;i<e.definitions.length;i++){var a=e.definitions[i];if(a.name&&a.name.value==n)return a}}function o(e,n){var i={kind:e.kind,definitions:[d(e,n)]};e.hasOwnProperty("loc")&&(i.loc=e.loc);var a=t[n]||new Set,o=new Set,r=new Set;a.forEach((function(e){r.add(e)}));while(r.size>0){var l=r;r=new Set,l.forEach((function(e){if(!o.has(e)){o.add(e);var n=t[e]||new Set;n.forEach((function(e){r.add(e)}))}}))}return o.forEach((function(n){var a=d(e,n);a&&i.definitions.push(a)})),i}(function(){i.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),t[e.name.value]=n}}))})(),e.exports=i,e.exports["fetchCompanyVocAndVodFromCompVertical"]=o(i,"fetchCompanyVocAndVodFromCompVertical")}}]);
//# sourceMappingURL=chunk-c807e990.16d5d6df.js.map