{"version":3,"sources":["webpack:///src/views/desktop/dashboard-pages/company-pages/src/views/desktop/dashboard-pages/company-pages/company-edit.vue"],"names":[],"mappings":"AAopBA,sCACA,+CAAA,CAAA,uCACA,CACA,sCACA,+CACA,CACA,qCACA,GACA,kBACA,CACA,IACA,oBACA,CACA,GACA,kBACA,CACA,CACA,yBACA,iBAAA,CACA,oBAAA,CACA,UAAA,CACA,WACA,CAEA,+BACA,SAAA,CACA,OAAA,CACA,QACA,CAEA,yBACA,iBAAA,CACA,cAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,QAAA,CACA,wBAAA,CAEA,cACA,CAEA,gCACA,iBAAA,CACA,UAAA,CACA,WAAA,CACA,UAAA,CACA,QAAA,CACA,UAAA,CACA,qBAAA,CAEA,cACA,CAEA,uCACA,wBACA,CAEA,qCACA,0BACA,CAEA,8CAGA,0BACA,CAGA,+BACA,kBACA,CAEA,sCACA,iBACA,CAEA,6BAEA,QACA","file":"chunk-5bf3e130.d35a1bb2.css","sourcesContent":["<template>\n  <section class=\"dashboard-user-edit-page h-min-screen bg-white p-5 mt-12\">\n    <h1 class=\"text-xl font-bold text-gray-700 mb-4\">\n      Edit Company\n    </h1>\n    <form>\n      <div class=\"md:flex justify-between relative\">\n        <div class=\"md:w-1/4\">\n          <label class=\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-xs uppercase \">Company Name</label>\n          <input\n            id=\"company\"\n            v-model=\"companyName\"\n            class=\"block appearance-none w-full bg-gray-100 border border-gray-400\n        hover:border-gray-500 px-4 py-2 rounded leading-tight focus:outline-none text-lg\"\n            type=\"text\"\n            :disabled=\"isEditMode\"\n          >\n        </div>\n        <div class=\"md:w-1/4\">\n          <label class=\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-grey-darkest text-xs uppercase\"> Type </label>\n          <div class=\"relative\">\n            <select\n              v-model=\"type\"\n              class=\"block appearance-none w-full bg-gray-100 border border-gray-400\n                    hover:border-gray-500 px-4 py-2 pr-8 rounded leading-tight focus:outline-none text-lg\"\n              :disabled=\"isEditMode\"\n            >\n              <option value>\n                ---\n              </option>\n              <option value=\"Champion\">\n                Champion\n              </option>\n              <option value=\"Accelerator\">\n                Accelerator\n              </option>\n              <option value=\"Trailblazer\">\n                Trailblazer\n              </option>\n            </select>\n            <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-600\">\n              <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"md:w-1/4\">\n          <label\n            class=\"block font-bold letter-spacing-05 mt-3 mb-1 ml-1 text-gray-600 text-grey-darkest text-xs\n          uppercase\"\n            for=\"user-role-select\"\n          > Company Vertical </label>\n          <div class=\"relative\">\n            <select\n              id=\"user-role-select\"\n              ref=\"user-role-select\"\n              v-model=\"vertical\"\n              class=\"block appearance-none w-full bg-gray-100 border border-gray-400\n                    hover:border-gray-500 px-4 py-2 pr-8 rounded leading-tight focus:outline-none text-lg\"\n              :disabled=\"isEditMode\"\n            >\n              <option value>\n                ---\n              </option>\n              <option\n                v-for=\"item in verticalData\"\n                :key=\"item.id\"\n                :value=\"item.id\"\n              >\n                {{ item.name }}\n              </option>\n            </select>\n            <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-600\">\n              <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"enableActivateButton\" class=\"cta-cont text-left my-6\">\n        <button class=\"bg-green-500 border-2 border-green-500 mx-1 px-4 py-1 rounded text-white w-24 w-50\" @click=\"modalActivateCompany = true\">\n          <span>Activate</span>\n        </button>\n      </div>\n      <div v-if=\"!enableActivateButton\" class=\"cta-cont text-left mt-8\">\n        <button class=\"bg-red-500 border-2 border-red-500 mx-1 px-4 py-1 rounded text-white w-24 w-50\" @click=\"modalDisableCompany = true\">\n          <span>Delete</span>\n        </button>\n        <button\n          v-if=\"enableSaveButton\"\n          class=\"border-2 rounded px-4 py-1 w-24 mx-1\"\n          :class=\"!saveButtonDisable ? 'border-green-400 text-green-500 w-24' : 'border-gray-400 text-gray-500'\"\n          :disabled=\"saveButtonDisable\"\n          @click=\"updateCompany\"\n        >\n          <span>Save</span>\n        </button>\n        <button\n          class=\"border-2 rounded px-4 py-1 w-24 mx-1\"\n          :class=\"!enableSaveButton ? 'border-red-400 text-red-500 w-24' : 'border-gray-400 text-gray-500'\"\n          :disabled=\"enableSaveButton\"\n          @click=\"updateEditMode\"\n        >\n          <span>Edit</span>\n        </button>\n\n        <!-- <button\n                  class=\"border-2 rounded px-4 py-1 w-24\"\n                  :class=\" 'border-red-400 text-red-500'\"\n                  @click=\"softDeleteUser(index)\"\n                >\n                  <span>Delete</span>\n                </button> -->\n      </div>\n    </form>\n    <p class=\"bg-gray-200 flex items-center justify-center rounded my-3 py-2 text-gray-700\">\n      Showing accounts: <span class=\"font-bold\">{{ allUsers ? allUsers.length : 0 }}</span>\n      <!-- Added Edit Button -->\n      <!-- <router-link :to=`/dashboard/admin/user/edit/${user.id}` class=\"border-2 border-gray-500 rounded px-2 text-gray-600\">\n                Edit user\n              </router-link> -->\n    </p>\n    <div>\n      <!-- popup for enabled user -->\n      <template>\n        <transition name=\"bounce\">\n          <div v-if=\"modalIf\" class=\"modal fixed w-full h-full top-0 left-0 flex items-center justify-center z-20\">\n            <div class=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" />\n\n            <div class=\"bg-white flex flex-col h-64 modal-container mx-4 overflow-y-auto relative rounded shadow-lg lg:w-1/3 z-10\">\n              <div class=\"bg-red-500 font-bold px-5 py-1 rounded text-2xl text-center text-white\">\n                <p class=\"title\">\n                  Choose an Option!\n                </p>\n              </div>\n              <h3 class=\"font-bold mx-auto my-6 px-2 py-6 text-black text-xl\">\n                Are you sure that you want to \"DISABLE\" this User.\n              </h3>\n              <div class=\"flex justify-around\">\n                <button class=\"border-2 border-red-500 font-bold px-3 rounded text-red-500 text-lg \" @click=\"changeUserCompanyS\">\n                  Disable\n                </button>\n                <button class=\"border-2 border-gray-500 font-bold px-3 rounded text-gray-500 text-lg \" @click=\"leave();\">\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        </transition>\n      </template>\n\n      <template>\n        <transition name=\"bounce\">\n          <div v-if=\"modalDisableCompany\" class=\"modal fixed w-full h-full top-0 left-0 flex items-center justify-center z-20\">\n            <div class=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" />\n\n            <div class=\"bg-white flex flex-col h-64 modal-container mx-4 overflow-y-auto relative rounded shadow-lg lg:w-1/3 z-10\">\n              <div class=\"bg-red-500 font-bold px-5 py-1 text-2xl rounded text-white text-center\">\n                <p class=\"title\">\n                  Choose an Option!\n                </p>\n              </div>\n              <h3 class=\"font-bold mx-auto my-6 px-2 py-6 text-black text-xl\">\n                Are you sure that you want to \"DELETE\" this Company.\n              </h3>\n              <div class=\"flex justify-around\">\n                <button class=\"border-2 border-red-500 font-bold px-3 rounded text-red-500 text-lg\" @click=\"DeleteCompany\">\n                  Delete\n                </button>\n                <button class=\"border-2 border-gray-500 font-bold px-3 rounded text-gray-500 text-lg\" @click=\"leaveConfirmBox\">\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        </transition>\n      </template>\n\n      <template>\n        <transition name=\"bounce\">\n          <div v-if=\"modalActivateCompany\" class=\"modal fixed w-full h-full top-0 left-0 flex items-center justify-center z-20\">\n            <div class=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" />\n\n            <div class=\"bg-white flex flex-col h-64 modal-container mx-4 overflow-y-auto relative rounded shadow-lg lg:w-1/3 z-10\">\n              <div class=\"bg-green-500 font-bold px-5 py-1 text-2xl rounded text-white text-center\">\n                <p class=\"title\">\n                  Choose an Option!\n                </p>\n              </div>\n              <h3 class=\"font-bold mx-auto my-6 px-2 py-6 text-black text-xl\">\n                Are you sure that you want to \"ACTIVATE\" this Company.\n              </h3>\n              <div class=\"flex justify-around\">\n                <button class=\"border-2 border-green-500 font-bold px-3 rounded text-green-500 text-lg\" @click=\"ActivateCompany\">\n                  Enable\n                </button>\n                <button class=\"border-2 border-gray-500 font-bold px-3 rounded text-gray-500 text-lg\" @click=\"leaveConfirmBox\">\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        </transition>\n      </template>\n      <!-- popup for disabled user -->\n      <template>\n        <transition name=\"bounce\">\n          <div v-if=\"modalIfUserDisable\" class=\"modal fixed w-full h-full top-0 left-0 flex items-center justify-center z-20\">\n            <div class=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" />\n\n            <div class=\"bg-white flex flex-col h-64 modal-container mx-4 overflow-y-auto relative rounded shadow-lg lg:w-1/3 z-10\">\n              <div class=\"bg-green-500 font-bold px-5 py-1 text-2xl rounded text-white text-center\">\n                <p class=\"title\">\n                  Choose an Option!\n                </p>\n              </div>\n              <h3 class=\"font-bold mx-auto my-6 px-2 py-6 text-black text-xl\">\n                Are you sure that you want to \"ENABLE\" this User.\n              </h3>\n              <div class=\"flex justify-around\">\n                <button class=\"border-2 border-green-500 font-bold px-3 rounded text-green-500 text-lg\" @click=\"changeUserCompanyS\">\n                  Enable\n                </button>\n                <button class=\"border-2 border-gray-500 font-bold px-3 rounded text-gray-500 text-lg\" @click=\"leave();\">\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        </transition>\n      </template>\n      <!-- <PopupIf v-model=\"modalIf\"></PopupIf> -->\n      <PopupElse v-model=\"modalElse\" />\n    </div>\n    <section class=\"bg-white\">\n      <div\n        class=\"\n        flex text-lg justify-between bg-white block border-b border-t border-dark-gray-500\n        font-black justify-between leading-normal py-2 sticky text-gray-600 text-sm uppercase z-10 table-head\"\n      >\n        <p class=\"flex-2\">\n          User\n        </p>\n        <p class=\"flex-1 text-center\">\n          VOS\n        </p>\n        <p class=\"flex-1 text-center\">\n          VOD\n        </p>\n        <p class=\"flex-1 text-center\">\n          Admin\n        </p>\n        <p class=\"flex-1 text-right\">\n          Status\n        </p>\n      </div>\n      <div\n        v-for=\"user in allUsers\"\n        :key=\"user.id\"\n\n        class=\"\n          border-b\n          border-gray-200\n          py-3\n          w-full\n\n          block\n          flex\n          text-left\n          justify-between\n          pointer\n        \"\n      >\n        <div class=\"flex-2 leading-snug text-lg\">\n          <p>{{ user.firstName }} {{ user.lastName }}</p>\n          <p v-if=\"user.userHidden\" class=\"text-red-700 text-xs\">\n            User Disabled\n          </p>\n          <!--\n          <p class=\"text-gray-700 text-sm\">\n            Type: Champion\n          </p> -->\n        </div>\n        <div class=\"no-text-wrap flex items-center justify-center flex-1 \">\n          <i v-if=\"user.isVOC\" class=\"far fa-check-circle text-green-500 text-xl\" />\n          <i v-else class=\"far fa-times-circle text-red-500 text-xl\" />\n        </div>\n        <div class=\"no-text-wrap flex items-center justify-center flex-1\">\n          <i v-if=\"user.isVOD\" class=\"far fa-check-circle text-green-500 text-xl\" />\n          <i v-else class=\"far fa-times-circle text-red-500 text-xl\" />\n        </div>\n        <div class=\"no-text-wrap flex items-center justify-center flex-1\">\n          <i v-if=\"user.isAdmin\" class=\"far fa-check-circle text-green-500 text-xl\" />\n          <i v-else class=\"far fa-times-circle text-red-500 text-xl\" />\n        </div>\n        <div class=\"no-text-wrap flex items-center justify-end flex-1\">\n          <!-- <i v-if=\"user.isAdmin\" class=\"far fa-check-circle text-green-500 text-lg\" />\n          <i v-else class=\"far fa-times-circle text-red-500 text-lg\" /> -->\n          <!-- :value=\"user.isHidden ? false : true\" -->\n          <!-- <toggle-button\n            :id=\"user.id\"\n            :ref=\"'key' + user.id\"\n            :toggled=\"false\"\n            :value=\"user.isHidden === 0 ? false : true\"\n            :width=\"45\"\n            :color=\"{checked: '#48bb78', unchecked: '#f56565'}\"\n            :labels=\"{checked: '|', unchecked: 'O'}\"\n            @change=\"changeUsercompanyStatusN(user , $event )\"\n          /> -->\n\n          <label v-if=\"!user.userHidden && !enableActivateButton\" class=\"switch\">\n            <input\n              id=\"checkbox\"\n              type=\"checkbox\"\n              :value=\"user.isHidden\"\n              :checked=\"user.isHidden ? false : true\"\n              @change=\"changeUsercompanyStatusN(user , $event )\"\n            >\n            <span class=\"slider round\" />\n          </label>\n        </div>\n      </div>\n    </section>\n  </section>\n</template>\n\n<script>\n// import { ToggleButton } from 'vue-js-toggle-button';\nimport FETCH_COMPANY_DETAIL from '@/graphql/fetchCompany.gql';\nimport GETALL_VERTICALS from '@/graphql/fetchAllVerticals.gql';\nimport UPDATE_COMPANY_DETAIL from '@/graphql/updateCompanyDetails.gql';\nimport UPDATE_USERS_COMPANY_FLAG from '@/graphql/updateUserCompanyByVerticalFlag.gql';\n// this can be use to update and data\nimport UPDATE_COMPANY_STATUS from '@/graphql/updateCompanyFlag.gql';\n// toggle\nimport PopupElse from './popupElse.vue';\n// eslint-disable-next-line no-unused-vars\nimport { showErrorMessage, showSuccessMessage } from '../../../../utils/notification';\n\nexport default {\n  allUsers: [],\n  name: 'CompanyEdit',\n  components: {\n    PopupElse,\n  },\n  data() {\n    return {\n      query: '',\n      typeFilter: '',\n      type: '',\n      verticalFilter: '',\n      isFilled: false,\n      checkUser: [],\n      check: '',\n      companyVerticalId: 0,\n      enableSaveButton: false,\n      enableActivateButton: false,\n      companyName: '',\n      companyType: '',\n      companyId: 0,\n      isEditMode: true,\n      validationErrors: [],\n      verticalData: [],\n      vertical: '',\n      modalIf: false,\n      modalElse: false,\n      modalIfUserDisable: false,\n      activateMode: false,\n      modalDisableCompany: false,\n      modalActivateCompany: false,\n      compUserCheck: [],\n    };\n  },\n  computed: {\n\n    saveButtonDisable() {\n      // TODO: Review this one! using same function to disable button and change its color\n\n      if (this.companyName === '') {\n        return true;\n      }\n      if (this.type === '') {\n        return true;\n      }\n      if (this.vertical === '') {\n        return true;\n      }\n      return false;\n    },\n\n  },\n\n  watch: {\n    $route(currentVal, oldVal) {\n      if (oldVal.name === 'Dashboard.Companies' && currentVal.name === 'Dashboard.Company.Edit') {\n        this.renderReady = false;\n        this.getCompanyDetails();\n        this.enableSaveButton = false;\n        this.isEditMode = true;\n      }\n      if (oldVal.name === 'Dashboard.addNewCompany' && currentVal.name === 'Dashboard.Company.Edit') {\n        this.renderReady = false;\n        this.getCompanyDetails();\n        this.enableSaveButton = false;\n        this.isEditMode = true;\n      }\n    },\n  },\n\n  mounted() {\n    this.onAccountSelect();\n    this.getCompanyDetails();\n  },\n\n  methods: {\n    leave() {\n      this.modalIf = false;\n      this.modalIfUserDisable = false;\n      this.check.checked = !this.check.checked;\n    },\n\n    leaveConfirmBox() {\n      this.modalDisableCompany = false;\n      this.modalActivateCompany = false;\n    },\n    searchQueryUpdated(val) {\n      this.query = val;\n    },\n    updateEditMode() {\n      this.enableSaveButton = true;\n      this.isEditMode = false;\n    },\n    async DeleteCompany() {\n      try {\n        const variable = {\n          id: 0,\n          isHidden: 1,\n        };\n\n        // variable.isHidden = this.isHidden;\n        variable.id = parseInt(this.companyId, 10);\n\n        const { data } = await this.$apollo.mutate({\n          mutation: UPDATE_COMPANY_STATUS,\n          variables: variable,\n        });\n        console.log('updateUser', data);\n        this.$store.dispatch('addToastNotifications', {\n          text: 'Company Updated Successfully !',\n          timer: 4000,\n          type: 'success',\n        });\n\n        this.enableActivateButton = true;\n      } catch (error) {\n        this.$store.dispatch('addToastNotifications', {\n          text: error.message,\n          timer: 4000,\n          type: 'error',\n        });\n      }\n\n      this.modalDisableCompany = false;\n    },\n\n    async ActivateCompany() {\n      try {\n        const variable = {\n          id: 0,\n          isHidden: 0,\n        };\n\n        // variable.isHidden = this.isHidden;\n        variable.id = parseInt(this.companyId, 10);\n\n        await this.$apollo.mutate({\n          mutation: UPDATE_COMPANY_STATUS,\n          variables: variable,\n        });\n        this.$store.dispatch('addToastNotifications', {\n          text: 'Company Activated Successfully !',\n          timer: 4000,\n          type: 'success',\n        });\n\n        this.enableActivateButton = false;\n      } catch (error) {\n        this.$store.dispatch('addToastNotifications', {\n          text: error.message,\n          timer: 4000,\n          type: 'error',\n        });\n      }\n      this.modalActivateCompany = false;\n    },\n\n    async changeUsercompanyStatusN(user, event) {\n      this.check = event.target;\n      // if (event.target.checked === false) {\n      //   this.compUserCheck = user;\n      //   this.check = event.target;\n      //   this.modalIf = true;\n      // } else {\n      //   this.compUserCheck = user;\n      //   this.modalIfUserDisable = true;\n      // }\n      if (event.target.checked === false) {\n        // console.log(user.isVOC);\n        if (this.checkUser.length > 1) {\n          this.compUserCheck = user;\n          this.check = event.target;\n          this.modalIf = true;\n        } else {\n          console.log('else');\n          this.modalElse = true;\n          this.check = event.target;\n          // eslint-disable-next-line no-param-reassign\n          event.target.checked = !event.target.checked;\n        }\n      } else {\n        console.log('else');\n        this.compUserCheck = user;\n        this.modalIfUserDisable = true;\n      }\n    },\n    async changeUserCompanyS() {\n      const variable = {\n        id: 0,\n        userId: 0,\n        isHidden: 0,\n      };\n      try {\n        variable.id = parseInt(this.companyVerticalId, 10);\n        variable.userId = parseInt(this.compUserCheck.id, 10);\n        variable.isHidden = parseInt(this.compUserCheck.isHidden ? 0 : 1, 10);\n\n        // check updated result isvalue updated or not ask pankaj\n        await this.$apollo.mutate({\n          mutation: UPDATE_USERS_COMPANY_FLAG,\n          variables: variable,\n        });\n\n        // showSuccessMessage(this.$store, 'User Status change Successfully !');\n      } catch (error) {\n        // showErrorMessage(this.$store, error.message);\n        // console.log(error.message);\n      }\n      this.modalIf = false;\n      this.modalIfUserDisable = false;\n    },\n\n    async updateCompany() {\n      try {\n        this.enableSaveButton = false;\n        this.isReadOnlyFeild = true;\n\n        const variable = {\n          id: 0,\n          name: '',\n          type: '',\n          verticalId: 0,\n        };\n        if (this.companyName) {\n          variable.name = this.companyName;\n        }\n\n        if (this.type) {\n          variable.type = this.type;\n        }\n\n        if (this.vertical) {\n          variable.verticalId = this.vertical;\n        }\n        // variable.isHidden = this.isHidden;\n        variable.id = parseInt(this.companyId, 10);\n\n        await this.$apollo.mutate({\n          mutation: UPDATE_COMPANY_DETAIL,\n          variables: variable,\n        });\n\n        this.$store.dispatch('addToastNotifications', {\n          text: 'Company Updated Successfully !',\n          timer: 4000,\n          type: 'success',\n        });\n      } catch (error) {\n        this.$store.dispatch('addToastNotifications', {\n          text: error.message,\n          timer: 4000,\n          type: 'error',\n        });\n      }\n    },\n\n    async onAccountSelect() {\n      try {\n        const { data } = await this.$apollo.query({\n          query: GETALL_VERTICALS,\n          variables: {\n\n          },\n        });\n        this.verticalData = data.fetchAllVerticals;\n\n        console.log('TCL: onAccountSelect -> this.verticalData', this.verticalData);\n      } catch (error) {\n        console.log('vertical error -> ', error);\n      }\n      // this.verticalData = this.accountData.filter(ad  => ad.companyId === this.selectedAccount.companyId);\n    },\n\n    async getCompanyDetails() {\n      const currentCompanyId = this.$route.params.companyId;\n      this.companyId = this.$route.params.companyId;\n      const { data } = await this.$apollo.query({\n        fetchPolicy: 'network-only',\n        query: FETCH_COMPANY_DETAIL,\n        variables: {\n          id: parseInt(currentCompanyId, 10),\n        },\n      });\n\n      // console.log(data);\n      const {\n        name,\n        type,\n        verticalId,\n        isHidden,\n      } = data.fetchCompany[0];\n\n      if (name) {\n        this.companyName = name;\n      }\n\n      if (type) {\n        this.type = type;\n      }\n\n      if (verticalId) {\n        this.vertical = verticalId;\n      }\n\n      if (isHidden) {\n        this.enableActivateButton = true;\n      } else {\n        this.enableActivateButton = false;\n      }\n\n      // const  usernewId  = this.$route.params.userId;\n      // console.log(`Company Details are: ${JSON.stringify(this.$route.params)}`);\n    },\n  },\n};\n</script>\n    <style scoped>\n      /* About Styles */\n      .bounce-enter-active {\n        animation: bounce-in .7s;\n      }\n      .bounce-leave-active {\n        animation: bounce-in .6s reverse;\n      }\n@keyframes bounce-in {\n  0% {\n    transform: scale(0);\n  }\n  50% {\n    transform: scale(1.5);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 44px;\n  height: 20px;\n}\n\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #f56565;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 12px;\n  width: 12px;\n  left: 3px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: #4ebb7d;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n.table-head\n{\n  top:48px;\n}\n    </style>\n"]}